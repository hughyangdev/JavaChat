/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javachat;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
public class JavaChatGui extends javax.swing.JFrame implements Runnable {

	String userId, chatName, host;
    Socket sock;
    ObjectOutputStream out;
    ObjectInputStream in;
    final int port = 9999;
    
    boolean isSendOne = false; // 귓속말 보내기라면 true
    Color fontCr = Color.BLACK; // 글자색
    
    boolean isStop = false; // 스레드 실행 조건으로 사용
    
    DefaultTableModel userModel;
    
    public static final int LOGIN = 0;
    public static final int ENTER = 1;
    public static final int LOGOUT = -1;
    public static final int EXIT = -2; 
    
    StyledDocument doc; // 텍스트페인의 문서 모델
    SimpleAttributeSet attr;
    
    // 이모티콘 팝업 프레임 구성
    ImageIcon emo1 = new ImageIcon(this.getClass().getResource("/images/1.png"));
    ImageIcon emo2 = new ImageIcon(this.getClass().getResource("/images/2.png"));
    ImageIcon emo3 = new ImageIcon(this.getClass().getResource("/images/3.png"));
    ImageIcon emo4 = new ImageIcon(this.getClass().getResource("/images/4.png"));
    ImageIcon emo5 = new ImageIcon(this.getClass().getResource("/images/5.png"));
    ImageIcon emo6 = new ImageIcon(this.getClass().getResource("/images/6.png"));
    
    ImageIcon[] icons = { emo1, emo2, emo3, emo4, emo5, emo6 };
    JButton[] bt = new JButton[icons.length];
    JFrame popF = new JFrame("Emoticon");
    
    public JavaChatGui() {
    	setTitle("::Chat Chat v1.1::");
        initComponents();
        userModel = (DefaultTableModel)userTable.getModel();
        this.tabEnabled(LOGIN, ENTER);
        // 로그인 패널 활성화, 채팅방 패널은 비활성화
        this.doc = tpMsg.getStyledDocument();
        
        Container cp = popF.getContentPane();
        cp.setLayout(new GridLayout(2,0)); // 2행은 고정, 열은 가변적으로
        for(int i=0; i<icons.length; i++) {
        	bt[i] = new JButton(icons[i]);
        	cp.add(bt[i]);
        	bt[i].setActionCommand(String.valueOf(i));
        	bt[i].addActionListener(new ActionListener() {
        		public void actionPerformed(ActionEvent e) {
        			try {
        				out.writeUTF("300|"+e.getActionCommand());
        				out.flush();
        			}catch(Exception ee) {
        				System.out.println("이모티콘 보내는 중 예외: "+ee);
        			}
        		}
        	});
        }
    } // 생성자------------
    
    /*탭페인의 활성화 여부를 결정하는 메소드*/
    public void tabEnabled(int enable, int disable) {
    	tabPane.setEnabledAt(enable, true);
    	tabPane.setEnabledAt(disable, false);
    	tabPane.setSelectedIndex(enable);
    	if(enable==ENTER) { // 채팅패널이 활성화 되었다면
    		tfInput.requestFocus(); // 대화메시지 입력창에 입력 포커스 주기
    	}else if(enable==LOGIN) {
    		//tpMsg.setEnabled(false); ->
    		tfId.requestFocus();
    	}
    } // tabEnabled()-----------

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        tfChatName = new javax.swing.JTextField();
        tfHost = new javax.swing.JTextField();
        btCon = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpMsg = new javax.swing.JTextPane();
        tfInput = new javax.swing.JTextField();
        chk = new javax.swing.JCheckBox();
        comboColor = new javax.swing.JComboBox();
        lb = new javax.swing.JLabel();
        btEmoti = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbId = new javax.swing.JLabel();
        lbChatName = new javax.swing.JLabel();
        btLogout = new javax.swing.JButton();
        btRename = new javax.swing.JButton();
        btExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        // 창닫기 이벤트 처리
        addWindowListener(new WindowAdapter() {
        	public void windowClosing(WindowEvent e) {
        		isStop = true;
        		exitProcess(); // 채팅 종료처리 메소드 호출
        	}
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255), 2));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe Script", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Chat Chat");

        jPanel4.setBackground(new java.awt.Color(153, 204, 255));

        jLabel2.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        jLabel2.setText("아 이 디:");

        jLabel3.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        jLabel3.setText("대 화 명:");

        jLabel4.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        jLabel4.setText("호 스 트:");

        tfHost.setText("192.168.0.187");

        btCon.setBackground(new java.awt.Color(255, 255, 204));
        btCon.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btCon.setMnemonic('C');
        btCon.setText("연 결");
        btCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConActionPerformed(evt);
            }
        });

        btCancel.setBackground(new java.awt.Color(255, 255, 204));
        btCancel.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btCancel.setMnemonic('R');
        btCancel.setText("취 소");
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(btCon, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfChatName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfChatName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfHost, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        tabPane.addTab("로그인", jPanel1);

        tpMsg.setEditable(false);
        tpMsg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255), 2));
        jScrollPane2.setViewportView(tpMsg);

        tfInput.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 204, 255), 2));
        tfInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfInputActionPerformed(evt);
            }
        });

        chk.setText("귓속말");
        chk.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chkItemStateChanged(evt);
            }
        });

        comboColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "검 정", "빨 강", "파 랑", "초 록", "오렌지", "핑 크" }));
        comboColor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboColorItemStateChanged(evt);
            }
        });

        lb.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        lb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb.setText("가");
        lb.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btEmoti.setText("이모티콘");
        btEmoti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEmotiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(tfInput)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(chk)
                        .addGap(75, 75, 75)
                        .addComponent(comboColor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lb, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(btEmoti)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(tfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chk)
                    .addComponent(comboColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lb)
                    .addComponent(btEmoti))
                .addGap(16, 16, 16))
        );

        tabPane.addTab("채팅방", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );

        tabPane.addTab("테마색", jPanel3);

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "아 이 디", "대 화 명"
            }
        ));
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                userTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        jPanel5.setBackground(new java.awt.Color(153, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(":: My Info ::"));

        jLabel5.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        jLabel5.setText("아 이 디:");

        jLabel6.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        jLabel6.setText("대 화 명:");

        lbId.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        lbId.setForeground(new java.awt.Color(204, 51, 0));
        lbId.setText("__");

        lbChatName.setFont(new java.awt.Font("굴림", 1, 14)); // NOI18N
        lbChatName.setForeground(new java.awt.Color(204, 51, 0));
        lbChatName.setText("__");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbChatName)
                    .addComponent(lbId))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbId))
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbChatName))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        btLogout.setBackground(new java.awt.Color(255, 255, 204));
        btLogout.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btLogout.setMnemonic('Q');
        btLogout.setText("퇴  장");
        btLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogoutActionPerformed(evt);
            }
        });

        btRename.setBackground(new java.awt.Color(255, 255, 204));
        btRename.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btRename.setMnemonic('L');
        btRename.setText("대화명 변경");
        btRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRenameActionPerformed(evt);
            }
        });

        btExit.setBackground(new java.awt.Color(255, 255, 204));
        btExit.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N
        btExit.setMnemonic('X');
        btExit.setText("종  료");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btLogout)
                        .addGap(36, 36, 36)
                        .addComponent(btRename)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(btExit))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabPane)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btRename, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btExit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConActionPerformed
    	// 1. 입력한 값 받기
    	userId = tfId.getText();
    	chatName = tfChatName.getText();
    	host = tfHost.getText();
    	// 2. 유효성 체크
    	if(userId==null || chatName==null || host==null ||
    			userId.trim().isEmpty() || chatName.trim().isEmpty() || host.trim().isEmpty()) {
    		showMsg("아이디, 대화명, 접속할 서버 ip주소를 입력하세요.");
    		return;
    	}
    	// 3. 채팅 입장
    	isStop = false;
    	chatEnter();
    	tabEnabled(ENTER, LOGIN);
    	// 채팅방은 활성화, 로그인 패널은 비활성화
    	lbId.setText(this.userId);
    	lbChatName.setText(this.chatName);
    	setTitle(this.getTitle()+"["+chatName+"]");
    	
    } // btCon---------------
    private void chatEnter() {
		try {
			sock = new Socket(host, port);
			tpMsg.setText("##채팅 서버에 접속했습니다.##\r\n");
			out = new ObjectOutputStream(sock.getOutputStream());
			in = new ObjectInputStream(sock.getInputStream());
			// 서버가 보내오는 메시지를 듣는 스레드를 동작
			Thread listener = new Thread(this);
			listener.start();
			// 입장 메시지를 보낸다.
			out.writeUTF("100|"+this.userId+"|"+this.chatName);
			out.flush();
		}catch(Exception e) {
			System.out.println("chatEnter()에서 예외: "+e);
		}
    	
	} // chatEnter()----------
    
    @Override
    public void run() {
    	// 서버가 보내오는 메시지를 계속 듣고 tpMsg에 출력한다.
    	try {
    		while(!isStop) {
    			String sMsg = in.readUTF();
    			System.out.println("serverMsg>>"+sMsg);
    			if(sMsg==null) return;
    			// 서버가 보내오는 메시지를 계속 듣고 이를 분석(파싱)하는 메소드를 호출한다.
    			parsing(sMsg);
    		} // while----------
    	}catch(IOException e) {
    		System.out.println("클 run()에서 예외: "+e);
    	}
    } // run()------------
    
    /**프로토콜별로 로직을 처리하는 메소드*/
	private void parsing(String sMsg) {
		String[] tokens = sMsg.split("\\|");
		switch(tokens[0]) {
		case "100": // 100|아이디|대화명
			{
				userModel = (DefaultTableModel)userTable.getModel();
				String[] rowData = { tokens[1], tokens[2] }; // 아이디, 대화명
				userModel.addRow(rowData);
			}break;
		case "300":{ // 300|대화명|이모티콘번호
				String from = tokens[1];
				String emoNo = tokens[2];
				int i = Integer.parseInt(emoNo.trim());
				showEmoticon(from, icons[i]);
			}break;
		case "400": { // 400|대화명|글자색|메시지
				String from = tokens[1];
				String fontRgb = tokens[2];
				String fromMsg = tokens[3];
				//showChat(from, fontRgb, fromMsg);
				showCacaoStyle(from, fontRgb, fromMsg);
			}break;
		case "500": { // 500|from대화명|귓속말메시지
				String from = tokens[1];
				String oneMsg = tokens[2];
				String str = "["+from+"]님이 보낸 귓속말>>"+oneMsg+"\r\n";
				//showChat(Color.pink, Color.blue, str);
				showCacaoStyle("other", Color.pink, Color.blue, str);
			}break;
		case "700": { // 대화명이 중복될 경우 "700|"
				showMsg(chatName+"이란 대화명은 이미 존재해요.");
				//tabEnabled(LOGIN, ENTER);
				////////////////
				exitChat(LOGOUT);
				// LOGOUT값이 넘어오면 퇴장처리, EXIT값이 오면 종료처리
			}break;
		case "800": { // 서버 => 클 "800|퇴장하는사람아이디|대화명"
			String logoutId = tokens[1];
			String logoutChatName = tokens[2];
			logout(logoutId, logoutChatName, LOGOUT);
			}break;
		case "900": { // 서버 => 클 "900|퇴장하는사람아이디|대화명"
			String exitId = tokens[1];
			String exitChatName = tokens[2];
			logout(exitId, exitChatName, EXIT);
			}break;
		} // switch--------
		
	} // parsing()--------------
	
	private synchronized void showCacaoStyle(String who, Color bgCr, Color fgCr, String msg) {
		// who (me: 내가 보낼때, other: 다른이가 보낼때)
		JLabel lb = new JLabel(msg);
		lb.setOpaque(true); // 라벨에 배경색을 적용시키려면 투명하게
		lb.setPreferredSize(new Dimension(700, 50));
		lb.setForeground(fgCr);
		lb.setBackground(bgCr);
		if(who.equals("me")) {
			// 내가 보낸 귓속말일 경우 => 오른쪽 정렬
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
		}else {
			// other - 내가 귓속말을 받을 경우 => 왼쪽 정렬
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_LEFT);
		}
		setStyle(lb, msg, attr);
	} // showCacaoStyle(String, Color, Color, String)---------

	/**대화 메시지를 스타일 적용하여 라벨 형태로 출력하는 메소드*/
	private synchronized void showCacaoStyle(String from, String fontRgb, String fromMsg) {
		String msg = " "+from+">>"+fromMsg+" \r\n";
		JLabel lb = new JLabel(msg);
		lb.setOpaque(true);
		lb.setPreferredSize(new Dimension(700,50));
		lb.setForeground(fontCr);
		if(from.equals(this.chatName)) {
			// 보낸이가 나라면 오른쪽에, 배경색은 노란색
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
			lb.setBackground(Color.yellow);
		}else {
			// 보낸이가 다른이라면 왼쪽에, 배경색은 다른색
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_LEFT);
			lb.setBackground(new Color(80,125,200));
		}
		setStyle(lb, msg, attr);
	} // showCacaoStyle(String, String, String)---------

	/**텍스트페인에 이모티콘을 출력해 보여주는 메소드*/
	private synchronized void showEmoticon(String from, ImageIcon icon) {
		//int offset = doc.getEndPosition().getOffset()-1;
		//tpMsg.setCaretPosition(offset);
		String msg = "["+from+"]님\r\n";
		JLabel lb = new JLabel(msg, icon, JLabel.CENTER);
		lb.setPreferredSize(new Dimension(700,100)); // lb의 폭은 700, 높이 100. 폭은 문자열만큼 차지함.
		lb.setHorizontalTextPosition(JLabel.CENTER);
		lb.setVerticalTextPosition(JLabel.TOP);
		
		// 보낸이가 나라면 라벨을 오른쪽에 보여주기
		if(from.equals(this.chatName)) {
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_RIGHT);
		}else {
			// 보낸이가 다른 사람이라면 라벨을 왼쪽에 보여주기
			attr = new SimpleAttributeSet();
			StyleConstants.setAlignment(attr, StyleConstants.ALIGN_LEFT);
		}
		setStyle(lb, msg, attr);
	} // showEmoticon()------------

	/*텍스트페인에 스타일 적용하여 라벨 끼워넣는 메소드*/
	private void setStyle(JLabel lb2, String msg, SimpleAttributeSet attr2) {
		int offset = doc.getEndPosition().getOffset()-1;
		tpMsg.setCaretPosition(offset);
		tpMsg.insertComponent(lb2);
		// JLabel은 문자열, 아이콘 형태 등 다양하게 표현 가능
		
		String enter = "\r\n"; // 엔터값 끼워넣기 (줄바꿈 하도록)
		offset = tpMsg.getCaretPosition();
		try {
			doc.insertString(offset, enter, attr2);
		} catch (BadLocationException e) {
			e.printStackTrace();
		}
		// 문단정렬방식 설정
		doc.setParagraphAttributes(offset+2, msg.length(), attr2, true);
		tpMsg.setCaretPosition(offset+2);
		
	} // setStyle()-----------

	private void logout(String Id, String ChatName, int mode) {
		// 1. 퇴장하는 클이 본인이 아닐 경우
		//		userModel에서 퇴장하는 클의 id를 제거하고
		//		tpMsg에 "...님이 퇴장합니다." 를 출력
		String exitId="", exitCname="";
		for(int i=0; i<userModel.getRowCount(); i++) {
			String cid = userModel.getValueAt(i, 0).toString();
			if(cid.equals(Id)) {
				// 클의 아이디와 퇴장하려는 사람의 Id가 같다면
				// userModel에서 제거
				exitId=cid;
				exitCname = userModel.getValueAt(i, 1).toString();
				userModel.removeRow(i);
				break;
			}
		} // for---------
		if(mode==LOGOUT) { // 로그아웃인 경우
			String str = exitId+"["+exitCname+"]님이 퇴장하였습니다.\r\n";
			this.showChat(Color.white, Color.red, str);
		}else if(mode==EXIT) { // 종료인 경우
			String str = exitId+"["+exitCname+"]님이 접속을 끊었습니다.\r\n";
			this.showChat(Color.red, Color.white, str);
		}
		
		// 2. 퇴장하는 클이 본인일 경우
		if(exitId.equals(this.userId)) {
			isStop = true;
			this.exitChat(mode);
		}
		
	} // logout()----------
	
	/**클라이언트가 전달한 메시지를 JTextPane에 스타일을 적용하여 표현하는 메소드*/
	private void showChat(String from, String fontRgb, String fromMsg) {
		synchronized(this) { //동기화
			int rgb = Integer.parseInt(fontRgb.trim());
			attr = new SimpleAttributeSet();
			StyleConstants.setForeground(attr, new Color(rgb));
			StyleConstants.setFontSize(attr, 16);
			StyleConstants.setFontFamily(attr, "sans-serif");
			
			int offset = doc.getEndPosition().getOffset()-1;
			tpMsg.setCaretPosition(offset);
			String msg = from+">>"+fromMsg+"\r\n";
			try {
				doc.insertString(offset, msg, attr);
			} catch (BadLocationException e) {
				e.printStackTrace();
			}
			
		}
		
	} // showChat()-----------
	private void exitChat(int mode) {
		try {
			isStop = true;
			lbId.setText("");
			lbChatName.setText("");
			if(out!=null) out.close();
			if(in!=null) in.close();
			if(sock!=null) {
				sock.close();
				sock = null;
			}
			switch(mode) {
			case LOGOUT: { // 퇴장인 경우
				userModel.setDataVector(null, new String[] {"아이디", "대화명"});
				this.tabEnabled(LOGIN, ENTER); // 로그인탭 활성화, 채팅방은 비활성화
				} break;
			case EXIT: { // 종료인 경우
				this.dispose();
				System.exit(0);
				} break;
			}
		}catch(Exception e) {
			System.out.println("exitChat()에서 예외: "+e);
		}
		
	} // exitChat()--------------
	
	public void showMsg(String msg) {
    	JOptionPane.showMessageDialog(this, msg);
    } // showMsg()-----------

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        tfId.setText("");
        tfChatName.setText("");
    }//btCancel----------------

    private void btLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogoutActionPerformed
        int yn = showConfirmMsg("퇴장할까요?");
        if(yn==JOptionPane.YES_OPTION && out!=null) {
        	try {
        		out.writeUTF("800|"+userId+"|"+chatName);
        		out.flush();
        	}catch(IOException e) {
        		System.out.println("퇴장 중 예외: "+e);
        	}
        }
    }//btLogout--------------

    private int showConfirmMsg(String msg) {
		int n = JOptionPane.showConfirmDialog(this, msg, "Confirm", JOptionPane.YES_NO_OPTION);
		return n;
	} // showConfirmMsg()-----------
    
	private void btRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRenameActionPerformed
        JOptionPane.showInputDialog("변경할 대화명을 입력하세요.");
    }//btRename--------------

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        exitProcess();
    }//btExit---------------

    private void exitProcess() {
		int yn = showConfirmMsg("종료할까요?");
		if(yn==JOptionPane.YES_OPTION) {
			// 1) 채팅 서버에 접속하고 종료하는 경우
			if(sock!=null) {
				try {
					out.writeUTF("900|"+userId+"|"+chatName);
					out.flush();
				}catch(Exception e) {
					System.out.println("접속 종료 중 예외: "+e);
				}
			}else {
				// 2) 채팅 서버에 접속하지 않고 종료하는 경우
				System.exit(0);
			}
			
		}
    	
	} // exitProcess()------------
	private void tfInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfInputActionPerformed
        // tfInput에 입력한 값 얻어오기
    	String sendMsg = tfInput.getText();
    	if(sendMsg==null||sendMsg.trim().isEmpty())
    		sendMsg=" "; // 빈문자 입력 시 처리 => 빈문자 반환 또는 return으로 종료?반환?
    	sendMessage(sendMsg);
    	tfInput.setText("");
    	tfInput.requestFocus();
    	
    }//tfInput---------------
    
    /**서버쪽에 메시지를 보내는 메소드*/
    private void sendMessage(String msg) {
		/*'|' 프로토콜에서 사용하는 구분 문자
		 * 만약 채팅참여자가 대화내용 중에 '|'를 보내면 프로토콜이 망가진다.
		 * msg중에 '|' 문자가 있으면 비슷한 문자로 대체하자. -> 'l', 'ㅣ'
		 * */
    	msg = msg.replace('|', 'ㅣ');
    	try {
    		if(isSendOne) { // 현재 false
    			// 귓속말인 경우
    			// 1. userTable에서 귓속말할 대상자를 선택해야 함
    			int row = userTable.getSelectedRow(); 
    			if(row<0) { //선택한 행이 없으면 -1 반환
    				showMsg("귓속말할 대상을 선택하세요");
    				return;
    			}
    			// "500|받을사람대화명|귓속말메시지"
    			String toChatName = userTable.getValueAt(row, 1).toString();
    			if(this.chatName.contentEquals(toChatName)) {
    				showMsg("본인에게는 귓속말을 보낼 수 없어요!!");
    				return;
    			}
    			String sendMsg = "500|"+toChatName+"|"+msg;
    			out.writeUTF(sendMsg);
    			out.flush();
    			
    			String str = "["+toChatName+"]님에게 보내는 귓속말>>"+msg+"\r\n";
    			//showChat(Color.yellow, new Color(227, 0, 227), str);
    			showCacaoStyle("me", Color.yellow, new Color(227, 0, 227), str);
    			
    		} else {
    			// 일반 대화인 경우 => "400|글자색|메시지" 를 서버에 보낸다.
    			int rgb = fontCr.getRGB();
    			String sendMsg = "400|"+rgb+"|"+msg;
    			out.writeUTF(sendMsg);
    			out.flush();
    		}
    		
    	}catch(IOException e) {
    		System.out.println("sendMessage() 예외: "+e);
    	}
		
	} // sendMessage()-------------
    /**귓속말일때 스타일을 적용해서 보여주는 메소드*/
	private synchronized void showChat(Color bgCr, Color fgCr, String msg) {
		attr = new SimpleAttributeSet();
		StyleConstants.setForeground(attr, fgCr);
		StyleConstants.setBackground(attr, bgCr);
		StyleConstants.setFontSize(attr, 16);
		tpMsg.setCaretPosition(doc.getEndPosition().getOffset()-1);
		int offset = tpMsg.getCaretPosition();
		
		try {
			doc.insertString(offset, msg, attr);
		} catch (BadLocationException e) {
			e.printStackTrace();
		}
		
	} // showChat()--------------
	
	private void chkItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chkItemStateChanged
        int state = evt.getStateChange();
        if(state==ItemEvent.SELECTED) {
        	// 귓속말 보내기에 체크했다면
        	isSendOne = true;
        	
        } else {
        	// 일반 대화
        	isSendOne = false;
        }
    }//chkItem----------------

    private void comboColorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboColorItemStateChanged
        int state = evt.getStateChange();
        if(state==ItemEvent.SELECTED) { // 이벤트 두번 발생으로 선택했을때 한번으로 조건 설정
	    	int index = comboColor.getSelectedIndex();
	        switch(index) {
	        case 0: fontCr = Color.black; break;
	        case 1: fontCr = Color.red; break;
	        case 2: fontCr = Color.blue; break;
	        case 3: fontCr = Color.green; break;
	        case 4: fontCr = Color.orange; break;
	        case 5: fontCr = Color.pink; break;
	        } // switch-----------
	        lb.setForeground(fontCr);
        } // if-------------
    }//comboColor--------------

    private void btEmotiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEmotiActionPerformed
        popF.pack();
        popF.setLocation(this.getWidth(),0);
        popF.setVisible(true);
    }//btEmoti-----------

    private void userTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTableMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaChatGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaChatGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btCon;
    private javax.swing.JButton btEmoti;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btLogout;
    private javax.swing.JButton btRename;
    private javax.swing.JCheckBox chk;
    private javax.swing.JComboBox comboColor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lb;
    private javax.swing.JLabel lbChatName;
    private javax.swing.JLabel lbId;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTextField tfChatName;
    private javax.swing.JTextField tfHost;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfInput;
    private javax.swing.JTextPane tpMsg;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
} //--------------------------------
